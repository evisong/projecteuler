/**
 * https://projecteuler.net/problem=2
 * 
 * Even Fibonacci numbers
 * Problem 2
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 * 
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * 
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */
import java.util.List;
import java.util.ArrayList;

public class Solution002 {
    public static void main(String[] args) {
        List<Integer> fibonacciNums = new ArrayList<Integer>();
        fibonacciNums.add(1);

        int previous = 1;
        int current = 2;
        while (current < 4000000) {
            //System.out.println(previous);
            //System.out.println(current);
            //System.out.println("=========");
            fibonacciNums.add(current);
            int temp = previous;
            previous = current;
            current += temp;
        }

        System.out.println("fibonacciNums size: " + fibonacciNums.size());
        System.out.println(fibonacciNums);

        int sum = 0;
        for (int i : fibonacciNums) {
            if (i % 2 == 0) {
                //System.out.println(i);
                sum += i;
            }
        }

        // Odd-value sum: 4613731
        // Even-value sum: 4613732
        System.out.println(sum);
    }
}